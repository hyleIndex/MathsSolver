{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 This week, I started testing the .solve() function for derivatives. I created a testing file with functions to test the basic functions (sin, cos, log\'85). Next week I will continue testing .solve(), by testing the different operations. To do so, I will create AbstractFunction instances that have one operator joining two basic functions. Then I will move on to more complex functions. This week I also helped clear up an issue between the AbstractFunction constructor and Tokenizer class. We had trouble figuring out how to handle parentheses used with the composition operator. We decided to use a ~ to represent the composition operator as a token. \
}